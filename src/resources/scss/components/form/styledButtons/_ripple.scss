////
/// @group Styled buttons - Ripple
/// @since 2.0
/// @author Lionel PÃ©ramo
////

// loading sass modules
@use 'sass:color';
@use 'sass:map';

// loading theming component
@use 'components/design/theming/theming';

$-light-button-color: #9cf;

// defaults
$-defaults : (
  'border-radius' : .5rem * theming.$font-size,
  'padding' : 1rem * theming.$font-size 2rem * theming.$font-size,
  'print' : false,
  'ripple--border' : null,
  'ripple--color' : 'ripple--color',
  'ripple--active--background-color' : 'ripple--active--background-color',
  'ripple--hover--background-color' : 'ripple--hover--background-color',
  'ripple--background-color' : 'ripple--background-color',
  'suffix' : '',
  'themes' : (
    'light' : (
      'default--ripple--border' : 0,
      'default--ripple--color' : #222,
      'default--ripple--active--background-color' : color.adjust($-light-button-color, $lightness: 10%),
      'default--ripple--hover--background-color' : $-light-button-color,
      'default--ripple--background-color' : color.adjust($-light-button-color, $lightness: -10%)
    ),
    'dark' : (
      'default--ripple--border' : 0,
      'default--ripple--color' : #333,
      'default--ripple--active--background-color' : color.adjust($-light-button-color, $lightness: 10%),
      'default--ripple--hover--background-color' : $-light-button-color,
      'default--ripple--background-color' : color.adjust($-light-button-color, $lightness: -10%)
    )
  )
);

///
/// Main mixin that creates buttons with the 'ripples' style.
///
/// @access public
/// @param  {array} $-options ()
///
@mixin create($-options : ()) {
  $-themeUsed : map.has-key($-options, 'themes');
  $-options   : map.deep-merge($-defaults, $-options); // deep-merge is needed to ensure default theme variables are kept;

  // extracting variables...
  // basic variables
  $-border-radius : map.get($-options, 'border-radius');
  $-padding       : map.get($-options, 'padding');
  $-print         : map.get($-options, 'print');
  $-suffix        : map.get($-options, 'suffix');

  // theme light/dark variables
  $-ripple--hover--background-color : map.get($-options, 'ripple--hover--background-color');
  $-ripple--background-color        : map.get($-options, 'ripple--background-color');
  $-ripple--border                  : map.get($-options, 'ripple--border');
  $-ripple--color                   : map.get($-options, 'ripple--color');

  @include theming.set-actual-component('ripple');

  // odd lines /!\
  @if not $-themeUsed {
    @include theming.add-themes(map.get($-options, 'themes'));
  }

  .ripple#{$-suffix} {
    // animation
    transition : background 1.5s;

    // background
    @if $-ripple--background-color {
      @include theming.to-theme(
        (#{&} + ':not(:hover)' : ('background-color', $-ripple--background-color)),
        $-suffix,
        $-themeUsed,
        $-print
      );
    }

    @if $-ripple--border {
      @include theming.to-theme(
        (#{&} : ('border', $-ripple--border)),
        $-suffix,
        $-themeUsed,
        $-print
      );
    }

    // border
    @if $-border-radius {
      border-radius : $-border-radius;
    }

    // cursor
    cursor : pointer;

    // size
    @if $-padding {
      padding : $-padding;
    }

    // text
    @if $-ripple--color {
      @include theming.to-theme(
        (#{&} : ('color', $-ripple--color)),
        $-suffix,
        $-themeUsed,
        $-print
      );
    }

    &:not(:focus-visible) {
      outline : 0;
    }

    &:not(:hover) {
      background-position : center;
    }

    @if $-ripple--hover--background-color {
      &:hover {
        $-theme--ripple--background-color : $-ripple--hover--background-color;
        $-hover--background-color-light : if(
            $-themeUsed,
            map.get(theming.$themes, 'light', $-theme--ripple--background-color),
            map.get($-defaults, 'themes', 'light', 'default--ripple--hover--background-color')
        );

        @if not $-print {
          @media (prefers-color-scheme : light) {
            background : $-hover--background-color-light radial-gradient(
                circle,
                transparent 1%,
                $-hover--background-color-light 1%
            ) center/15000%;
          }

          @media (prefers-color-scheme : dark), (prefers-color-scheme : no-preference) {
            $-hover--background-color : if(
                $-themeUsed,
                map.get(theming.$themes, 'dark', $-theme--ripple--background-color),
                map.get($-defaults, 'themes', 'dark', 'default--ripple--hover--background-color')
            );

            background : $-hover--background-color radial-gradient(
                circle,
                transparent 1%,
                $-hover--background-color 1%
            ) center/15000%;
          }
        } @else {
          background : $-hover--background-color-light radial-gradient(
              circle,
              transparent 1%,
              $-hover--background-color-light 1%
          ) center/15000%;
        }
      }
    }

    &:active {
      @include theming.to-theme(
        (#{&} : ('background-color', map.get($-options,'ripple--active--background-color'))),
        $-suffix,
        $-themeUsed,
        $-print
      );

      background-size : 100% !important;
      transition      : background 0s !important;
    }
  }
}
