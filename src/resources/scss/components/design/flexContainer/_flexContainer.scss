////
/// Flex container component.
///
/// @group Flex container
/// @access public
///
/// @since 1.0
/// @author Lionel PÃ©ramo
////

// loading sass modules
@use 'sass:map';

// loading sass partials
@use 'desktop';
@use 'mobile';

$-defaults : (
  'align-content' : null,
  'align-items' : null,
  'flex-direction' : null,
  'height' : auto,
  'justify-content' : null,
  'suffix' : '',
  'width' : 100%,
  'wrap' : null
);

///
/// Main mixin that initializes the flexContainer component.
///
/// @access public
///
@mixin init() {
  .flex-container {
    box-sizing : border-box;
    display    : flex;
  }
}

///
/// Main mixin that creates a themed accordion using `details` and `summary` markups
///
/// @access public
/// @param  {array} $-options ()
///

@mixin create($-options : ()) {
  $-options : map.deep-merge($-defaults, $-options); // deep-merge is needed to ensure default theme variables are kept

  // extracting variables...
  // Suffix to allow different configurations for the same kind of component
  $-height          : map.get($-options, 'height');
  $-align-content   : map.get($-options, 'align-content');
  $-align-items     : map.get($-options, 'align-items');
  $-flex-direction  : map.get($-options, 'flex-direction');
  $-justify-content : map.get($-options, 'justify-content');
  $-width           : map.get($-options, 'width');
  $-wrap            : map.get($-options, 'wrap');
  $-suffix          : map.get($-options, 'suffix');

  .flex-container.suffix#{map.get($-options, 'suffix')} {
    @if $-height {
      height : $-height;
    }

    @if $-width {
      width : $-width;
    }

    @if $-wrap {
      flex-wrap : $-wrap;
    }

    @if $-align-content {
      align-content : $-align-content;
    }

    @if $-align-items {
      align-items : $-align-items;
    }

    @if $-flex-direction {
      flex-direction : $-flex-direction;
    }

    @if $-justify-content {
      justify-content : $-justify-content;
    }
  }
}
