////
/// @group Tables - First design
/// @since 2.2
/// @author Lionel PÃ©ramo
////

// loading sass module list
@use 'sass:map';

// loading theming component
@use '../../components/theming/theming';

$defaults : (
  'border-collapse' : collapse,
  'desktop--td-padding' : .5rem,
  'mobile--header-min-width' : 25rem,
  'mobile--gap' : 1rem,
  'mobile--td-padding' : .5rem,
  'table--border' : 'table--border',
  'table--border-radius' : .5rem,
  'table--td--border' : 'table--td--border',
  'table--th--border' : 'table--th--border',
  'suffix' : '',
  'themes' :  (
    'light' : (
      'default--table--border' : 1px solid #333,
      'default--table--td--border' : 1px solid #333,
      'default--table--th--border' : 1px solid #333,
    ),
    'dark' : (
      'default--table--border' : 1px solid #eee,
      'default--table--td--border' : 1px solid #eee,
      'default--table--th--border' : 1px solid #eee,
    )
  )
);

///
/// Table initialization mixin.
///
/// @access public
///
@mixin init() {
  .table {
    @media (max-width : 699px) {
      &-header {
        display : none;
      }

      & tr {
        display: block;
      }

      & td {
        display         : flex;
        justify-content : space-between;

        &::before {
          content     : attr(data-label);
          font-weight : bold;
        }
      }
    }
  }
}

///
/// Main mixin that creates table components (first design).
///
/// @access public
/// @param  {array} $options ()
///
@mixin create($options : ()) {
  $themeUsed : map.has-key($options, 'themes');
  $options : map.merge($defaults, $options);

  // extracting variables...
  $border-collapse : map.get($options, 'border-collapse');
  $desktop--td-padding : map.get($options, 'desktop--td-padding');
  $mobile--header-min-width : map.get($options, 'mobile--header-min-width');
  $mobile--gap : map.get($options, 'mobile--gap');
  $mobile--td-padding : map.get($options, 'mobile--td-padding');
  $suffix : map-get($options, 'suffix');
  $table-border : map-get($options, 'table--border');
  $table--border-radius : map.get($options, 'table--border-radius');
  $table--td--border : map-get($options, 'table--td--border');
  $table--th--border : map-get($options, 'table--th--border');

  @include theming.add-themes(map-get($options, 'themes'));

  .table.suffix#{$suffix} {
    @if ($border-collapse != null) {
      border-collapse: $border-collapse;
    }

    @media (min-width : 700px) {
      @if ($table-border != null) {
        @include theming.mass-theme(
          (
            ('border', $table-border)
          ),
          $suffix,
          $themeUsed
        );
      }

      @if ($table--border-radius != null) {
        border-radius : $table--border-radius;
      }

      td {
        @if ($desktop--td-padding != null) {
          padding : $desktop--td-padding;
        }

        @if ($table--td--border != null) {
          @include theming.mass-theme(
            (
              ('border', $table--td--border)
            ),
            $suffix,
            $themeUsed
          );
        }
      }

      th {
        @if ($table--th--border != null) {
          @include theming.mass-theme(
            (
              ('border', $table--th--border)
            ),
            $suffix,
            $themeUsed
          );
        }
      }
    }

    @media (max-width : 699px) {
      tr {
        @if ($table-border != null ) {
          @include theming.mass-theme(
            (
              ('border', map-get($options, 'table--border'))
            ),
            $suffix,
            $themeUsed
          );
        }

        // size
        @if ($mobile--gap != null) {
          margin-bottom : $mobile--gap;
        }
      }

      td {
        @if ($mobile--header-min-width != null) {
          min-width : map.get($options, 'mobile--header-min-width');
        }

        @if ($mobile--td-padding != null) {
          padding : map.get($options, 'mobile--td-padding');
        }
      }
    }
  }
}
