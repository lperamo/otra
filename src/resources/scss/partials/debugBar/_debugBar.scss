////
/// @author Lionel PÃ©ramo
/// @group Debug bar
////

// loading configuration
@use '../../configuration/devModeFonts';
@use '../../configuration/themes' as *;

// loading EcoComposer components
@use '../../components/theming/theming';

// loading mixins
@use 'mixins';

// loading partials
@use 'profiler';

// initializing components
@include theming.init-themes($themes);

.otra--help-cursor {
  cursor : help;
}

.dbg-bar {
  // background
  @include theming.to-theme(
    (
      #{&} :
      (
        ('background-image', 'debug-bar--background-image'),
        ('box-shadow', 'debug-bar--box-shadow')
      )
    )
  );

  // box
  padding    : 5px 5px 8px;
  box-sizing : border-box;

  // positioning
  align-items : center;
  display     : flex;
  flex-wrap   : wrap;
  left        : 0;
  position    : fixed;
  right       : 0;
  top         : 0;
  z-index     : 10000;

  // text
  font-family : devModeFonts.$debug--font;

  // animation
  transition  : transform .2s;
  will-change : transform;

  // & = dbg-bar
  &-- {
    &btn:active {
      box-shadow : 0 0 25px #fff inset;
      position   : relative;
      top        : 1px;
    }

    &hide {
      display : none !important;
    }

    &primary {
      @include theming.to-theme(
        (
          #{&} : (
            ('color', 'debug-bar--primary--color'),
            ('text-shadow', 'debug-bar--primary--text-shadow')
          )
        )
      );
    }

    &logged {
      @include theming.to-theme(
        (
          #{&} : (
            ('color', 'debug-bar--logged-color'),
            ('text-shadow', 'debug-bar--logged-text-shadow')
          )
        )
      );
    }

    &not-logged {
      @include theming.to-theme(
        (
          #{&} : (
            ('color', 'debug-bar--not-logged-color'),
            ('text-shadow', 'debug-bar--not-logged-text-shadow')
          )
        )
      );
    }

    &primary,
    &on,
    &off {
      // The font size style is here in order that CSS from the project that uses OTRA do not perturb the debug bar CSS.
      font-size   : 16px;
      line-height : 16px;
    }

    &separator {
      margin-left  : 5px;
      margin-right : 5px;
    }

    &block {
      &--container {
        @include theming.to-theme(
          (
            #{&} :
            (
              ('background-image', 'debug-bar--background-image'),
              ('box-shadow', 'debug-bar--box-shadow'),
              ('color', 'debug-bar--primary--color')
            )
          )
        );

        // appearance
        border-radius : 5px 5px 0 0;

        // positioning
        bottom   : 38px;
        left     : 0;
        position : absolute;

        // size
        padding       : 10px;

        // text
        color : #444;

        &--element {
          margin-bottom : 0;
          margin-top    : 0;
        }
      }

      &:not(:hover) + div {
        display : none;
      }

      &:hover + div {
        display : block;
      }
    }

    &cache {
      // positioning
      position : relative;

      // text
      font-size   : 16px;
      line-height : 16px;

      @include theming.to-theme(
        (
          #{&} + '--disabled' : (
            ('color', 'debug-bar--cache--disabled--color'),
            ('text-shadow', 'debug-bar--cache--disabled--text-shadow')
          ),
          #{&} + '--enabled' : (
            ('color', 'debug-bar--cache--enabled--color'),
            ('text-shadow', 'debug-bar--cache--enabled--text-shadow')
          )
        )
      );
    }

    &toggle {
      // size
      box-sizing : border-box;

      // positioning
      margin-left : 10px;

      // animation
      transition  : text-shadow .25s;
      will-change : text-shadow;

      // text
      @include theming.to-theme(
        (
          #{&} : ('color', 'debug-bar--toggle--color')
        )
      );

      font-size   : 20px;

      // others
      cursor      : pointer;

      &:not(:hover) {
        @include theming.to-theme(
          (
            #{&} : ('text-shadow', 'debug-bar--toggle--text-shadow')
          )
        );
      }

      &:hover {
        @include mixins.debugToggleHoverTextShadow;
      }

      // Arrows
      &-direction {
        // positioning
        position : fixed;
        left     : -10000px;
      }

      &-top {
        &:checked ~ #dbg-bar {
          transform: rotateZ(0deg);
        }
      }

      &-right {
        &:checked ~ #dbg-bar {
          transform-origin : right;
          transform        : rotateZ(-90deg) translate(19px, calc(100vw - 102.1vh));
          width            : 100vh;

          & > .dbg-bar--toggle {
            transform : rotateZ(90deg);
          }
        }
      }

      &-bottom {
        &:checked ~ #dbg-bar {
          transform-origin : top left;
          transform        : translate(0, calc(100vh - 38px));
        }
      }

      &-left {
        &:checked + #dbg-bar {
          transform-origin : left;
          transform        : rotateZ(90deg) translate(-19px, -19px);
          width            : 100vh;

          & > .dbg-bar--toggle {
            transform : rotateZ(-90deg);
          }
        }
      }
    }
  }
}

.dbg-bar--btn {
  // animation
  transition : box-shadow .2s, color .2s, text-shadow .2s;
  will-change: box-shadow, color, text-shadow;

  @include theming.to-theme(
    (
      #{&} : (
        ('background-image', 'debug-bar--button--background-image'),
        ('box-shadow', 'debug-bar--button--box-shadow'),
        ('color', 'debug-bar-buttons--color'),
        ('text-shadow', 'debug-bar--button--text-shadow')
      )
    )
  );

  // background
  border        : none;
  border-radius : 5px;

  // box
  height  : auto;
  padding : 5px;
  display : inline-block;

  // text
  font-weight : 400;

  // others
  cursor : pointer;

  &:hover,
  &:active,
  &:focus {
    @include theming.to-theme(
      (
        #{&} : (
          ('color', 'debug-bar--buttons--hover--color'),
          ('box-shadow', 'debug-bar--buttons--hover--box-shadow'),
          ('text-shadow', 'debug-bar--buttons--hover--text-shadow')
        )
      )
    );
  }

  &:focus {
    outline : none;
  }
}

.div-error {
  // background
  @include theming.to-theme(
    (
      #{&} : ('background-color', 'debug-bar--error--background-color')
    )
  );

  // box
  height     : 100%;
  width      : 100%;

  // positioning
  position   : absolute;
  top        : 0;
}
