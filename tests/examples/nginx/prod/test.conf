server
{
  listen      80;
  listen      [::]:80;
  # Updates the server_name if needed
  server_name prod.otra.tech;
  return      301 https://$server_name$request_uri; #Redirection
}

server
{
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  set $rootPath /var/www/html/test/;
  index index.php;

  # Updates the server_name if needed
  server_name prod.otra.tech;
  error_log /var/log/nginx/prod.otra.tech/error.log error;
  access_log /var/log/nginx/prod.otra.tech/access.log;

  root $rootPath/web;

  ssl_certificate /var/www/html/test/tmp/certs/server_crt.pem;
  ssl_certificate_key /var/www/html/test/tmp/certs/server_key.pem;

  expires $expires;
  #HSTS
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

  # XSS protections
  add_header X-Content-Type-Options "nosniff";
  add_header X-XSS-Protection "1; mode=block";

  # Avoid showing server version ...
  server_tokens off;
  more_set_headers 'Server: Welcome on my site!';

  # This header allows you to control whether or not you leak information about your users' behavior to third parties
  add_header Referrer-Policy same-origin always;

  # Prevents hotlinking (others that steal our bandwidth and assets).
  valid_referers none blocked ~.google. ~.bing. ~.yahoo. otra.tech *.otra.tech localhost;

  if ($uri ~ "^/$")
  {
    set $invalid_referer "";
  }

  if ($uri ~ "^/(robots.txt|sitemap.xml)$")
  {
    set $invalid_referer "";
  }

  if ($invalid_referer)
  {
    return 403;
  }

  # Forces static compression (for already compressed files)
  brotli on;
  brotli_comp_level 7;
  brotli_static always;
  gzip off;

  # Blocking any page that don't send a referrer via if conditions in the next 'location' blocks

  # Handling the compressed web manifest
  location ~ /manifest\.br
  {
    if ($http_referer = "")
    {
      return 403;
    }

    types
    {
      application/manifest+json br;
    }

    brotli_types application/manifest+json;
    add_header Content-Encoding br;
    add_header X-XSS-Protection "";
    add_header Referrer-Policy same-origin always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options "nosniff";
    server_tokens off;
  }

  # Handling cached CSS (PWA uses them even when we are in development mode)
  location ~ /cache/css/.*\.br$
  {
    if ($http_referer = "")
    {
      return 403;
    }

    types
    {
      text/css br;
    }

    brotli_types text/css;
    add_header Content-Encoding br;
    add_header X-XSS-Protection "";
    add_header Referrer-Policy same-origin always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options "nosniff";
    server_tokens off;

    root $rootPath;
  }

  # For local testing purpose only
  location ~ /vendor/.*\.css$
  {
    if ($http_referer = "")
    {
      return 403;
    }

    brotli_types text/css;
    root $rootPath;
  }

  # Handling cached JS (PWA uses them even when we are in development mode)
  location ~ /cache/js/.*\.br$
  {
    if ($http_referer = "")
    {
      return 403;
    }

    types
    {
      application/javascript br;
    }

    brotli_types application/javascript;
    add_header Content-Encoding br;
    add_header X-XSS-Protection "";
    add_header Referrer-Policy same-origin always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options "nosniff";
    server_tokens off;

    root $rootPath;
  }

  # Handling cached TPL (PWA uses them even when we are in development mode)
  location ~ /cache/tpl/.*\.br$
  {
    if ($http_referer = "")
    {
      return 403;
    }

    types
    {
      text/html br;
    }

    add_header Content-Encoding br;
    add_header X-XSS-Protection "";
    add_header Referrer-Policy same-origin always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options "nosniff";
    server_tokens off;

    root $rootPath;
  }

  # Handling service worker, robots.txt and sitemaps
  location ~ /.*\.(js|txt|xml)$
  {
    if ($http_referer = "")
    {
      return 403;
    }
  }

  # Handling images and fonts
  location ~ /.*\.(avif|ico|jpe?g|png|svg|webp|woff2)$
  {
    # Workaround, Firefox does not send referrer for favicons so we send always the images when Firefox is used

    # Handles the case of "not favicon images" when using Firefox
    set $referer $http_referer;

    if ($uri ~ "^/(favicon|apple-touch).*\.png$")
    {
      set $referer https://$server_name/;
    }

    if ($http_user_agent !~ ".*Firefox.*")
    {
      set $referer $http_referer;
    }

    if ($referer = "")
    {
      return 403;
    }

    # Handle vendor images
    if ($uri ~ "^/vendor.*$")
    {
      root $rootPath;
    }
  }

  # Handles rewriting
  location /
  {
    rewrite ^ /index.php last;
  }

  location ~ \.php
  {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;

    fastcgi_param APP_ENV prod;
    fastcgi_param TEST_LOGIN yourLogin;
    fastcgi_param TEST_PASSWORD yourPassword;
  }
}
